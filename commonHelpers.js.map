{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport icon from '../img/octagon.svg';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hours]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nstartBtn.addEventListener('click', onStartTimer);\n\nlet userSelectedDate = 0;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.show({\n        iconUrl: icon,\n        theme: 'dark',\n        message: 'Please choose a date in the future',\n        messageSize: '16px',\n        messageColor: 'white',\n        backgroundColor: '#EF4040',\n        position: 'topRight',\n        timeout: 5000,\n      });\n\n      return;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction onStartTimer() {\n  const intervalId = setInterval(() => {\n    const timeDifference = userSelectedDate - Date.now();\n    const time = convertMs(timeDifference);\n    timerDays.textContent = addLeadingZero(time.days);\n    timerHours.textContent = addLeadingZero(time.hours);\n    timerMinutes.textContent = addLeadingZero(time.minutes);\n    timerSeconds.textContent = addLeadingZero(time.seconds);\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n  }, userSelectedDate - Date.now());\n\n  input.disabled = true;\n  startBtn.disabled = true;\n}\n"],"names":["input","startBtn","timerDays","timerHours","timerMinutes","timerSeconds","onStartTimer","userSelectedDate","options","selectedDates","iziToast","icon","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","intervalId","timeDifference","time"],"mappings":"wGAMA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5DJ,EAAS,iBAAiB,QAASK,CAAY,EAE/C,IAAIC,EAAmB,EACvBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAF,EAAmBE,EAAc,GAE7BA,EAAc,IAAM,KAAK,IAAG,EAAI,CAClCC,EAAS,KAAK,CACZ,QAASC,EACT,MAAO,OACP,QAAS,qCACT,YAAa,OACb,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,QAAS,GACjB,CAAO,EAED,MACN,MACMV,EAAS,SAAW,EAEvB,CACH,EAEAW,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASd,GAAe,CACtB,MAAMe,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAiBf,EAAmB,KAAK,IAAG,EAC5CgB,EAAOV,EAAUS,CAAc,EACrCpB,EAAU,YAAciB,EAAeI,EAAK,IAAI,EAChDpB,EAAW,YAAcgB,EAAeI,EAAK,KAAK,EAClDnB,EAAa,YAAce,EAAeI,EAAK,OAAO,EACtDlB,EAAa,YAAcc,EAAeI,EAAK,OAAO,CACvD,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcF,CAAU,CACzB,EAAEd,EAAmB,KAAK,IAAG,CAAE,EAEhCP,EAAM,SAAW,GACjBC,EAAS,SAAW,EACtB"}